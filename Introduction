|-- Procedure oriented programming Language
    It is a way of writing a list of instructions for the computer to follow and this instructions are arranged in a group and this groups are known as functions.

|-- Object oriented programming Language
    It is a way of modularizing a program which allocates partitioned memory area for both data and functions and using them as a templates and call the copies of such modules on demand.

|-- Functional programming Language
    In this case, we are going to complete incomplete method with the help of expressions.

Java Programming Language
-------------------------
User A <---------------------> User B
             Language
        (Hindi, English, Marathi etc)

User A <---------------------> Machine
          Programming Language
        (Java, Python, C/C++ etc)

Language : Acts as a medium of communication

Programming Lnaguage : It is a set of instructions, commands and other syntaxes used to create a software.
                                                      5 - 2 = 3
Java Programming Language : It is a general purpose, imperative, case sensitive, object oriented, class based, strictly typed and highly syntax based programming language.

Along with this it is also a computing platform, here computing platform means collection of programs which allows java to create and run java applications. 

Types of application :
1. Window based Application | Standalone application | Desktop application
Tech. used : awt(abstract windowing toolkit) and swing
ex: antivirus, music player etc

2. Web Application : Application which runds on the browser and whose execution takes place on the server. It basically works on client server architecture. 

        |-------------------------------->
      client <---------HTTP--------> Server
       <---------------------------------|  
Servlet, Jsp, and frameworks

3. Enterprise application : Applications which are distributed in nature
EJB (Enterprise java beans)

4. Mobile Application : J2ME | Android 

5. Games
6. Embedded systems 
7. Big Data and Hadoop
8. Robotics 

-------------------------------------------------------------------------------

#include<stdio.h>
int main(){
    printf("Hello world");
    return 0;
}

#include<iostream>
using namespace std;
int main(){
    cout<<"Hello world";
    return 0;
}

Structure of java program
-------------------------

class Hello{
    public static void main(String args[]){
        System.out.println("Hello world");
    }
}

class : class is a keyword
class is a userdefined blueprint for creating object.

<class_name> : Hello(Pascal) | hello | HELLO

cases : 
    camel case : addProduct <----------- function
    pascal case : Hello  <-------------- class
    snake case : add_product
    habib case : add-product

Filename : Hello.java | Demo.java
class Hello{
    .....
}
|-- here file name and class name can be same or different

Filename : Hello.java
public class Hello{
    .....
}
|-- here file name and class name must be same

{ opening of class definition part
 
public static void main(String args[])
|-- public 
    |-- keyword
    |-- access modifier (public, private, protected, default(package private))
    |-- jvm can call it from anywhere

static
    |-- keyword
    |-- modifier (abstract, synchronized, static, final etc)
    |-- If we make any method as a static, then in that case we do not need to create object of that class to call that static method, static method is directly called by class name.

void
    |-- return type
    |-- Here it does not return anything

main
    |-- predefined word

(String args[]) 
    |-- command line argument
    |-- String  = class
    |-- args[] String array

    javac Demo.java

    java Demo Hello 23 56.67

(String []args)
(String[] args) 
(String...args) here 3 dots represents varargs = variable arguments 

String name,args[]
variable: name
array : args

String name,[]args
variable: name
array : args

String[] name,args
array : name,args
